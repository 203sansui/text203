 /* 在css文件中只需要写样式需要写标签 */
 /* 标签选择器:用于选择标签并渲染*/
 p {
    color: red;
    font-size: 16px;
 }

 div {
    color: rgb(20, 203, 51);
 }

 /* 类选择器：可单独选择一个或某几个标签 */
 /* . +  类名 */
 .red {
    color: rgb(12, 12, 12);
    height: 33px;
    background-color: rgb(226, 64, 36);
    width: 51px;
 }

 .font25 {
    font-size: 25px;
 }

 /* id选择器 样式通过 # 使用，只能由某个标签调用一次*/
 #pink {
    color: pink;
 }

 /* 通配符选择器 能直接应用到 除id选择器和标题 外的所有标签上*/
 * {
    color: rgb(118, 36, 158);
 }

 /* 字体 */
 h3 {
    font-family: '宋体';
 }

 /* 文字加粗 */
 .bold {
    /* font-weight: bold; 或者*/
    font-weight: 700;
    /* 400是正常的字粗 100-900*/
 }

 /* 斜体 */
 p {
    font-style: italic;
    /* font-style: normal; 更正斜体 */
 }

 /* 对齐文本 */
 h2 {
    text-align: center;
 }

 /* 文本装饰 */
 /* div {
    /* 下划线 上划线，删除线*/
 /* text-decoration: underline;
    text-decoration: overline;
    text-decoration: line-through; */
 }

 */ a {
    /* 删除下划线 （常用于删除网址下划线）*/
    text-decoration: none;
 }

 /* 文本缩进 (常用于段落首行缩进)*/
 p {
    text-indent: 20px;
    text-indent: 2em;
    /*em表示当前文字大小单位*/
 }

 /* 行间距 */
 p {
    line-height: 26px;
    /*减去文本像素再除2（上下间距）*/
 }

 /* 简写 */
 .one {
    text-align: center;
    /* tac*/
    width: 50px;
    /* w50 */
    height: 100px;
    /* h100 */
    line-height: 26px;
    /* lh26 (行高) */
    /* 等等许多按关键字写即可*/
 }

 /*  复合选择器  */

 /*   后代选择器 只修改 有序列表ol 中li 的标签  （子代的子代也可以选：ol li a）*/
 ol li {
    color: rgb(249, 161, 176);
 }

 /* 对于重名的标签，可以在父标签上加上class="nav"名字引用选择器书写如下 */
 .nav li {
    color: rgb(133, 183, 237);
 }

 /* 子选择器 只选择最近的一级儿子，不选择后面的子代用 > 分隔*/

 .nav>li {
    color: rgb(42, 204, 64);
 }

 /* 并集选择器 用逗号隔开相同级别的标签*/
 div,
 p {
    color: tomato;
 }

 /* 伪类选择器 用冒号:表示*/
 /* 把未点击过的链接选择上 */
 a:link {
    color: rgb(161, 136, 186);
    text-decoration: none;
 }

 /* 把点击过的链接选择上 */
 a:visited {
    color: rgb(103, 159, 219);
 }

 /* 把鼠标经过的连接选择上 */
 a:hover {
    color: red;
 }

 /* 把鼠标正在按下的链接选择上 */
 a:active {
    color: gold;
    /* 必须按照 LVHA lvha 的顺序写链接伪类选择器*/
 }

 /* :focus 伪类选择器用于选取获得焦点的表单元素 */
 input:focus {
    background-color: rgb(126, 130, 128);
 }

 /* 元素显示模式 */

 /* 将行内元素a转换为行内元素才能设置宽高 */
 a {
    width: 26px;
    height: 10px;
    display: block;
 }

 /* 将块级元素转换为行级元素 */
 div {
    display: inline;
 }

 /* 转换为行内块元素 */
 span {
    display: inline-block;
 }

 /* snipaste工具的使用 
 1. F1 可以截图, 同时测量大小, 设置箭头 书写文字等 
 2. F3 在桌面置顶显示 
 3. 点击图片, alt 可以取色 (按下shift可以切换取色模式) 
 4. 按下esc 取消图片显示
 */

 /* 让单行文字 垂直居中  ：让文字的行高等于盒子的高度 */
 div {
    height: 26px;
    line-height: 26;
 }

 /* 背景图片 */
 div {
    /* 背景地址 */
    background-image: url(img/erzi.jpg);
    /* 背景平铺（重复）是默认的 */
    background-repeat: no-repeat;
    /*设置不平铺*/
    background-repeat: repeat-x;
    /*沿着x轴平铺，也可以设置沿着y轴平铺*/
    /* 控制背景图片位置 */
    background-position: center;
    /* left top right bottom：靠边 center:水平居中  只有一个关键词默认居中 或者坐标：x y
   两种混合使用时，x轴在第一个位置表示，y轴在第二个位置*/
    /* 背景固定 */
    background-attachment: fixed;
    /* 背景滚动 */
    background-attachment: scroll;
    /* 透明度设置 */
    background-color: rgba(0, 0, 0, 0.6);
    /* 最后一个是半透明设置的范围0~1 */
 }

 div {
    /* css具有继承性 */
    /* 子类继承父类选择器的属性，重复选择器遵循就近原则 
   行高设置: font：14px/1.5表示字体14px 行高是1.5倍的字体大小*/

    /* css优先级 */
    /* 往下依次减小
   !important 无穷大 
   行内选择器 style   (<div style="color: purple"><div> )
   ID选择器0100
   类选择器0010
   标签选择器0001
   继承 或 * 0000  */

    /* 例如:*/
    color: pink !important;
 }

 /* 使用复合选择器时，需要计算权重叠加 */
 li {
    /* 权重大小：0001 */
    color: blue;
 }

 ul li {
    /* 权重大小：0001+0001=0002 */
    color: red;
 }

 /* 盒子模型 ： border边框 content内容 padding内边距 margin外边距*/
 div {
    width: 100px;
    height: 100px;
    border-width: 5px;
    /*实线边框*/
    border-style: solid;
    /* 点线边框 */
    border-style: dotted;
    /* 虚线边框 */
    border-style: dashed;
    border-color: turquoise;
    /* 可以单独设置上下左右边框  top  bottom  right  left*/
    /* 复合写法： */
    border-left: 1px solid #000;
    /* 相邻边框合并 */
    border-collapse: collapse;

    /* 注意:边框 会额外增加盒子大小 */
 }

 div {
    /* 内边下左内边距距上右都能调节 */
    padding: 5px;
    padding-left: 20px;
    /* 代表上下 左右 */
    padding: 5px 10px;
    /* 上 左右 下 */
    padding: 5px 10px 20px;
    /* 上 右 下 左 */
    padding: 10px 5px 20px 30px;
    /* 注意:内边距 也会额外增加盒子大小 */

    /* 技巧：当单元格字数不同时，不设置宽度，而设置相同的padding值，可以保证单元格大小相同 */
 }

 div {
    /* 在同辈元素之间的就是元素到元素之间的距离，在父子元素之间就是子元素到父元素边框之间的距离 */

    /* 外边距 用法与padding相似，但不会增加盒子本身大小*/
    margin: 5px;
    /* 使盒子居中  上下 左右*/
    margin: auto auto;
 }

 /* 行内元素或者行内块元素水平居中用 text-align: center即可 */

 /* 父元素塌陷问题 */
 div {
    /* 通过添加透明边框可以解决父类与子类一同移动的问题 */
    border: 1px solid transparent;
    /* 或者添加内边距  (有设置宽度时最好不用padding) */
    padding: 1px;
    /* 更优法 */
    overflow: hidden;
 }

 /* 清除网页元素内边距（浏览器默认有边距） 一般是第一行代码*/
 * {
    margin: 0px;
    padding: 0px;
 }

 div {
    width: 298px;
    height: 415px;
    background-color: #fff;
    margin: 100px auto;
 }

 p {
    height: 70px;
    padding: 0 20px;
    margin-top: 30px;
    font-family: cursive;
    font-size: 14px;
 }

 div {
    font-size: 12px;
    margin-top: ;
 }

 /* 盒子圆角边框、盒子阴影、文字阴影 */
 div {
    /* 圆角半径设置  设置为高度和宽度的一半就成 圆 了*/
    border-radius: 10px;
    border-radius: 50%;
    /* 顺时针设置边框半径 */
    border-radius: 10px 20px 30px 40px;
    /* 单独设置某个角的弧度 */
    border-top-right-radius: 10;
 }

 div {
    /* 盒子阴影 （不占用空间）*/
    /* 水平阴影 垂直阴影 影子虚实 阴影尺寸 阴影颜色*/
    /* 正右负左 正上负右 正实负虚         */
    box-shadow: 10px 10px 10px 10px rgb(12, 12, 12);
    /* 文字阴影 */
    text-shadow: hoff voff blur #000;
 }

 div:hover {
    /* 设置鼠标触及的盒子阴影 */
    box-shadow: 10px 10px 10px 10px rgb(12, 12, 12);
 }

 /* 多个块级元素纵向排列用浮动流 （标准流会有默认空隙）*/
 div {
    /* 浮动会使盒子沿着顶部边框紧贴  向左贴 向右贴 */
    /* 当位置不够时会自动换行显示 */
    float: none;
    float: left;
    float: right;
 }

 /* 浮动流下的位置会被标准流占据 */

 /* 浮动会使行内元素具有块内元素的性质，可以赋予宽度高度 
    若不设置，大小由内容决定*/

 /* 排列页面通常策略：父元素管理上下，子元素管理左右 */

 /* 浮动盒子只会影响后面的标准流，不会影响前面的标准流 */

 /* 为什么需要清除浮动? 
 ① 父级没高度。 
 ② 子盒子浮动了。 
 ③ 影响下面布局了,我们就应该清除浮动了。 */
 /* 当父盒子标准流不方便给高度时，让子盒子撑开父盒子来确定高度 
 但浮动元素不占用位置，故父元素高度会置零，故需要 清除浮动
 */
 div {
    /* 额外标签法 添加新的块级元素堵住子盒子往下*/
    <div class="qingchu"></div>
 }

 .qingchu {
    clear: both;
 }

 /* 添加overflow */
 div {
    /* 给父元素添加可以清除子元素浮动 */
    overflow: hidden;
 }

 /* 伪元素法 */
 .clearfix:after {
    content: "";
    display: block;
    height: 0;
    clear: both;
    visibility: hidden;
 }

 .clearfix {
    *zoom: 1;
 }

 /* css书写顺序 */
 /* 1.布局定位属性: display / position / float / clear / visibility / overflow (建议display第一个写，) 
 2.自身属性: width/height/ margin/padding/border / background 
 3.文本属性: color/ font / text-decoration / text-align /vertical-align / white-space/ break-word 
 4. 其他属性(CSS3) : content /cursor / border-radius /box-shadow / text-shadow / background : linear-gradient... */

 /* 定位 */
 /* 静态定位 默认定位*/
 div {
    position: static;
 }

 /* 相对定位 */
 div {
    /* 参照自己原来的位置移动 且原位置不被占用，不脱标*/
    position: relative;
    /* 距离原位置的右上边线200px，即左下移 */
    right: 200px;
    top: 200px;
 }

 /* 绝对定位 */
 div {
    /* 绝对定位不占具原来位置，即脱标 */
    /* 若无祖先或祖先没有定位，以浏览器边界为准对齐 
   若有则以最近有定位祖先边界对齐移动*/
    position: absolute;
 }

 /* 固定定位 */
 div {
    /* 脱标，以浏览器可视边界为准对齐 */
    /* 固定不动 */
    position: fixed;
 }

 div {
    /* 粘性定位，占据原先位置，以窗口为参照点移动，必须加top等才生效 */
    position: sticky;
 }

 /* 定位叠放 */
 div {
    /* 默认为auto，数值越大优先级越高 ，相同时后来者居上*/
    z-index: 1;
 }

 /* 绝对定位不能使用margin：auto使其水平居中 */
 /* 水平居中方法 */
 .box {
    /* 设置移动到父盒子50%，自身在回退一半 */
    position: absolute;
    height: 200px;
    width: 200px;
    left: 50%;
    margin-left: -100px;
    background-color: pink;
 }

 /* 添加定位会使元素脱标，不在独占一行，大小由内容决定 */
 /* 浮动元素不会标准流的文字和图片 ，而定位元素会完全压住标准流*/
 /* 注意：一个盒子既有left又有right属性，优先执行left，top与bottom是top优先 */

 /* 元素显示与隐藏 */
 div {
    /* 隐藏元素 并且元素位置将被占用*/
    display: none;
    /* 显示元素 */
    display: block;
    /* 隐藏元素，但保留位置 */
    visibility: hidden;
    /* 显示元素 */
    visibility: visible;
 }

 /* overflower溢出显示隐藏 */
 div {
    /* 显示滚动条 */
    overflow: scroll;
    /* 隐藏 */
    overflow: hidden;
    /* 视情况显示滚动条 */
    overflow: auto;
    /* 显示溢出部分 */
    overflow: visible;
 }

 /* 当鼠标经过土豆时mask显示的写法 */
 .tudou:hover .mask {
    display: block;
 }

 /* 精灵图 */
 /* 将所有图片集合到一张精灵图上，需要用到时通过背景移动将之移动到固定的区域 */
 /* 背景图片默认紧贴盒子左上角对齐 */
 .box {
    width: 60px;
    height: 60px;
    margin: 100px auto;
    /* 坐标轴为第四象限，向左移动为负，向下为正 */
    background: url(img/图层\ 133.png) no-repeat -182px 0;
 }

 /* 字体图标 */
 /* 三角形作法 */
 div {
    height: 0;
    width: 0;
    border: 100px solid transparent;
    /* 朝右的三角形 */
    border-right: 100px solid yellow;
 }

 /* 鼠标样式 cursor */
 div {
    /* 默认 */
    cursor: default;
    /* 小手 */
    cursor: pointer;
    /* 移动 */
    cursor: move;
    /* 禁止 */
    cursor: not-allowed;
    /* 文本 */
    cursor: text;
 }

 /* 轮廓线  outline*/
 input {
    /* 去除轮廓线 */
    outline: none;
 }

 textarea {
    /* 文本域去除拖拽设置  */
    resize: none;
 }

 /* 使文字和图片垂直居中 */
 img {
    /* 图片与文字中线对齐 */
    vertical-align: middle;
    /* 或者 */
    vertical-align: top;
    vertical-align: bottom;
 }

 /* 让单行溢出文字以省略号表 三步 */
 div {
    /* 1 强制文字在一行显示 */
    white-space: nowrap;
    /* 2 将溢出部分隐藏 */
    overflow: hidden;
    /* 3 溢出部分以省略号代替 */
    text-overflow: clip;
 }

 /* 多行文字省略号表示 */
 div {
    width: 150px;
    height: 65px;
    background-color: pink;
    margin: 100px auto;
    overflow: hidden;
    text-overflow: ellipsis;
    /* 弹性伸缩盒子模型显示 */
    display: -webkit-box;
    /* 限制在一个块元素显示的文本的行数 设置省略号所在的行数 */
    -webkit-line-clamp: 3;
    /* 设置或检索伸缩盒对象的子元素的排列方式 */
    -webkit-box-orient: vertical;
 }

 /* 解决重复边框问题 */
 div {
    /* 先浮动紧贴，再重叠边框 */
    float: left;
    margin-left: -1px;
    /* 若没有定位,相对定位控制中间盒子可以显示出来 */
    position: relative;

 }

 /* 若有 */
 div:hover {
    z-index: 2;
    border: 1px solid red;
 }

 /* 文字围绕浮动元素 */
 /* 给图片添加浮动即可 */
 /* 行内块元素添加text-align: center 即可使元素所有居中*/

 /* 优化三角 */
 div {
    height: 0;
    width: 0;
    border-top: 100px solid red;
    /* 改成透明色就可以删掉 */
    border-left: 0px solid green;
    border-right: 50px solid pink;
    border-bottom: 0px solid blue;
    /* 简写 */
    width: 0;
    height: 0;
    border-color: transparent red transparent transparent;
    border-style: solid;
    border-width: 100px 50px 0 0;
 }

 * {
    margin: 0;
    padding: 0
 }

 /* css初始化 */

 div {
    * {
       margin: 0;
       padding: 0;
    }

    em,
    i {
       font-style: normal
    }

    li {
       list-style: none
    }

    img {
       /* 取消图片地侧空白缝隙问题 */
       border: 0;
       vertical-align: middle
    }

    button {
       cursor: pointer
    }

    a {
       color: #666;
       text-decoration: none
    }

    a:hover {
       color: #c81623
    }

    button,
    input {
       font-family: Microsoft YaHei, Heiti SC, tahoma, arial, Hiragino Sans GB, "\5B8B\4F53", sans-serif
    }

    body {
       -webkit-font-smoothing: antialiased;
       background-color: #fff;
       font: 12px/1.5 Microsoft YaHei, Heiti SC, tahoma, arial, Hiragino Sans GB, "\5B8B\4F53", sans-serif;
       color: #666
    }

    .hide,
    .none {
       display: none
    }

    .clearfix:after {
       visibility: hidden;
       clear: both;
       display: block;
       content: ".";
       height: 0
    }

    .clearfix {
       *zoom: 1
    }
 }

 /* 制作favicon图标网址 */
 /* https://www.bitbug.net/ */